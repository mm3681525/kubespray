
PLAY [localhost] ***************************************************************

TASK [Check 2.9.0 <= Ansible version < 2.12.0] *********************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Check Ansible version > 2.10.11 when using ansible 2.10] *****************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Check that python netaddr is installed] **********************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Check that jinja is not too old (install via pip)] ***********************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

PLAY [Add kube-master nodes to kube_control_plane] *****************************

TASK [add nodes to kube_control_plane group] ***********************************
changed: [node1]
changed: [node2]
changed: [node3]

PLAY [Add kube-node nodes to kube_node] ****************************************

TASK [add nodes to kube_node group] ********************************************
changed: [node4]
changed: [node5]
changed: [node6]

PLAY [Add k8s-cluster nodes to k8s_cluster] ************************************

TASK [add nodes to k8s_cluster group] ******************************************
changed: [node4]
changed: [node5]
changed: [node6]
changed: [node1]
changed: [node2]
changed: [node3]

PLAY [Add calico-rr nodes to calico_rr] ****************************************
skipping: no hosts matched

PLAY [Add no-floating nodes to no_floating] ************************************
skipping: no hosts matched

PLAY [bastion[0]] **************************************************************
skipping: no hosts matched

PLAY [k8s_cluster:etcd] ********************************************************

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [node4] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node5] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node6] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node2] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node3] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [bootstrap-os : Fetch /etc/os-release] ************************************
ok: [node1]
ok: [node5]
ok: [node6]
ok: [node4]
ok: [node2]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/bootstrap-os/tasks/bootstrap-debian.yml for node4, node5, node6, node1, node2, node3

TASK [bootstrap-os : Check if bootstrap is needed] *****************************
ok: [node4]
ok: [node6]
ok: [node5]
ok: [node3]
ok: [node2]
ok: [node1]

TASK [bootstrap-os : Check http::proxy in apt configuration files] *************
ok: [node4]
ok: [node6]
ok: [node5]
ok: [node2]
ok: [node3]
ok: [node1]

TASK [bootstrap-os : Check https::proxy in apt configuration files] ************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [bootstrap-os : Set the ansible_python_interpreter fact] ******************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [bootstrap-os : Install dbus for the hostname module] *********************
ok: [node6]
ok: [node5]
ok: [node4]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [bootstrap-os : Create remote_tmp for it is used by another module] *******
ok: [node5]
ok: [node2]
ok: [node6]
ok: [node4]
ok: [node1]
ok: [node3]

TASK [bootstrap-os : Gather host facts to get ansible_os_family] ***************
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [bootstrap-os : Assign inventory name to unconfigured hostnames (non-CoreOS, non-Flatcar, Suse and ClearLinux, non-Fedora)] ***
ok: [node5]
ok: [node6]
ok: [node4]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [bootstrap-os : Ensure bash_completion.d folder exists] *******************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

PLAY [Gather facts] ************************************************************

TASK [Gather minimal facts] ****************************************************
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [Gather necessary facts (network)] ****************************************
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [Gather necessary facts (hardware)] ***************************************
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node4]
ok: [node3]

PLAY [k8s_cluster:etcd] ********************************************************

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [node4] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node5] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node6] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node2] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node3] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [kubespray-defaults : create fallback_ips_base] ***************************
ok: [node4 -> localhost]

TASK [kubespray-defaults : set fallback_ips] ***********************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [adduser : User | Create User Group] **************************************
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node4]
ok: [node3]

TASK [adduser : User | Create User] ********************************************
ok: [node5]
ok: [node6]
ok: [node4]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/preinstall : Remove swapfile from /etc/fstab] *****************
ok: [node5] => (item=swap)
ok: [node4] => (item=swap)
ok: [node1] => (item=swap)
ok: [node2] => (item=swap)
ok: [node6] => (item=swap)
ok: [node5] => (item=none)
ok: [node2] => (item=none)
ok: [node1] => (item=none)
ok: [node6] => (item=none)
ok: [node4] => (item=none)
ok: [node3] => (item=swap)
ok: [node3] => (item=none)

TASK [kubernetes/preinstall : check swap] **************************************
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/preinstall : Stop if either kube_control_plane or kube_node group is empty] ***
ok: [node4] => (item=kube_control_plane) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "kube_control_plane",
    "msg": "All assertions passed"
}
ok: [node4] => (item=kube_node) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "kube_node",
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if etcd group is empty in external etcd mode] ***
ok: [node4] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if non systemd OS type] *********************
ok: [node4] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node5] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node6] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if unknown OS] ******************************
ok: [node4] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node5] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node6] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if unknown network plugin] ******************
ok: [node4] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node5] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node6] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if supported Calico versions] ***************
ok: [node4] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node6] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node5] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if unsupported version of Kubernetes] *******
ok: [node4] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node5] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node6] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if known booleans are set as strings (Use JSON format on CLI: -e "{'key': true }")] ***
ok: [node4] => (item={'name': 'download_run_once', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "download_run_once",
        "value": false
    },
    "msg": "All assertions passed"
}
ok: [node4] => (item={'name': 'deploy_netchecker', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "deploy_netchecker",
        "value": false
    },
    "msg": "All assertions passed"
}
ok: [node4] => (item={'name': 'download_always_pull', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "download_always_pull",
        "value": false
    },
    "msg": "All assertions passed"
}
ok: [node4] => (item={'name': 'helm_enabled', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "helm_enabled",
        "value": false
    },
    "msg": "All assertions passed"
}
ok: [node4] => (item={'name': 'openstack_lbaas_enabled', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "openstack_lbaas_enabled",
        "value": false
    },
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if even number of etcd hosts] ***************
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if memory is too small for masters] *********
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if memory is too small for nodes] ***********
ok: [node4] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node5] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node6] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop when dynamic_kubelet_configuration enabled for kubernetes >= 1.22] ***
ok: [node4] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node5] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node6] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if ip var does not match local ips] *********
ok: [node4] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node6] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node5] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if RBAC is not enabled when dashboard is enabled] ***
ok: [node4] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node5] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node6] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if RBAC and anonymous-auth are not enabled when insecure port is disabled] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if bad hostname] ****************************
ok: [node4] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node5] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node6] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Get current calico cluster version] **************
ok: [node4]

TASK [kubernetes/preinstall : Check that kube_service_addresses is a network range] ***
ok: [node4] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Check that kube_pods_subnet is a network range] ***
ok: [node4] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Check that kube_pods_subnet does not collide with kube_service_addresses] ***
ok: [node4] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if unknown dns mode] ************************
ok: [node4] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if unknown kube proxy mode] *****************
ok: [node4] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if unknown cert_management] *****************
ok: [node4] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if unknown resolvconf_mode] *****************
ok: [node4] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if etcd deployment type is not host or docker] ***
ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node2] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [node3] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : check if booted with ostree] *********************
ok: [node5]
ok: [node2]
ok: [node6]
ok: [node1]
ok: [node4]
ok: [node3]

TASK [kubernetes/preinstall : set is_fedora_coreos] ****************************
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node4]
ok: [node1]
ok: [node3]

TASK [kubernetes/preinstall : set is_fedora_coreos] ****************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/preinstall : check resolvconf] ********************************
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/preinstall : check existence of /etc/resolvconf/resolv.conf.d] ***
ok: [node4]
ok: [node5]
ok: [node2]
ok: [node6]
ok: [node1]
ok: [node3]

TASK [kubernetes/preinstall : check status of /etc/resolv.conf] ****************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/preinstall : get content of /etc/resolv.conf] *****************
ok: [node5]
ok: [node4]
ok: [node2]
ok: [node6]
ok: [node1]
ok: [node3]

TASK [kubernetes/preinstall : get currently configured nameservers] ************
ok: [node4]
ok: [node6]
ok: [node5]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/preinstall : check systemd-resolved] **************************
ok: [node4]
ok: [node5]
ok: [node1]
ok: [node6]
ok: [node2]
ok: [node3]

TASK [kubernetes/preinstall : set dns facts] ***********************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/preinstall : check if kubelet is configured] ******************
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/preinstall : check if early DNS configuration stage] **********
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/preinstall : target resolv.conf files] ************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/preinstall : check if /etc/dhclient.conf exists] **************
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/preinstall : check if /etc/dhcp/dhclient.conf exists] *********
ok: [node4]
ok: [node6]
ok: [node5]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/preinstall : target dhclient conf file for /etc/dhcp/dhclient.conf] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/preinstall : target dhclient hook file for Debian family] *****
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/preinstall : generate search domains to resolvconf] ***********
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/preinstall : pick coredns cluster IP or default resolver] *****
ok: [node4]
ok: [node6]
ok: [node5]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/preinstall : generate nameservers to resolvconf] **************
ok: [node4]
ok: [node5]
ok: [node1]
ok: [node6]
ok: [node2]
ok: [node3]

TASK [kubernetes/preinstall : gather os specific variables] ********************
ok: [node4] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml)
ok: [node5] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml)
ok: [node6] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml)
ok: [node1] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml)
ok: [node2] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml)
ok: [node3] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml)

TASK [kubernetes/preinstall : check /usr readonly] *****************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/preinstall : Create kubernetes directories] *******************
ok: [node4] => (item=/etc/kubernetes)
ok: [node5] => (item=/etc/kubernetes)
ok: [node6] => (item=/etc/kubernetes)
ok: [node1] => (item=/etc/kubernetes)
ok: [node2] => (item=/etc/kubernetes)
ok: [node4] => (item=/etc/kubernetes/ssl)
ok: [node6] => (item=/etc/kubernetes/ssl)
ok: [node5] => (item=/etc/kubernetes/ssl)
ok: [node1] => (item=/etc/kubernetes/ssl)
ok: [node2] => (item=/etc/kubernetes/ssl)
ok: [node6] => (item=/etc/kubernetes/manifests)
ok: [node5] => (item=/etc/kubernetes/manifests)
ok: [node4] => (item=/etc/kubernetes/manifests)
ok: [node2] => (item=/etc/kubernetes/manifests)
ok: [node1] => (item=/etc/kubernetes/manifests)
ok: [node5] => (item=/usr/local/bin/kubernetes-scripts)
ok: [node6] => (item=/usr/local/bin/kubernetes-scripts)
ok: [node4] => (item=/usr/local/bin/kubernetes-scripts)
ok: [node2] => (item=/usr/local/bin/kubernetes-scripts)
ok: [node1] => (item=/usr/local/bin/kubernetes-scripts)
ok: [node5] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec)
ok: [node6] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec)
ok: [node4] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec)
ok: [node2] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec)
ok: [node1] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec)
ok: [node3] => (item=/etc/kubernetes)
ok: [node3] => (item=/etc/kubernetes/ssl)
ok: [node3] => (item=/etc/kubernetes/manifests)
ok: [node3] => (item=/usr/local/bin/kubernetes-scripts)
ok: [node3] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec)

TASK [kubernetes/preinstall : Create other directories] ************************
ok: [node4] => (item=/usr/local/bin)
ok: [node5] => (item=/usr/local/bin)
ok: [node6] => (item=/usr/local/bin)
ok: [node2] => (item=/usr/local/bin)
ok: [node1] => (item=/usr/local/bin)
ok: [node3] => (item=/usr/local/bin)

TASK [kubernetes/preinstall : Check if kubernetes kubeadm compat cert dir exists] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/preinstall : Create cni directories] **************************
ok: [node4] => (item=/etc/cni/net.d)
ok: [node5] => (item=/etc/cni/net.d)
ok: [node6] => (item=/etc/cni/net.d)
ok: [node1] => (item=/etc/cni/net.d)
ok: [node2] => (item=/etc/cni/net.d)
ok: [node4] => (item=/opt/cni/bin)
ok: [node5] => (item=/opt/cni/bin)
ok: [node6] => (item=/opt/cni/bin)
ok: [node1] => (item=/opt/cni/bin)
ok: [node2] => (item=/opt/cni/bin)
ok: [node4] => (item=/var/lib/calico)
ok: [node5] => (item=/var/lib/calico)
ok: [node6] => (item=/var/lib/calico)
ok: [node1] => (item=/var/lib/calico)
ok: [node2] => (item=/var/lib/calico)
ok: [node3] => (item=/etc/cni/net.d)
ok: [node3] => (item=/opt/cni/bin)
ok: [node3] => (item=/var/lib/calico)

TASK [kubernetes/preinstall : Write resolved.conf] *****************************
ok: [node5]
ok: [node2]
ok: [node4]
ok: [node6]
ok: [node1]
ok: [node3]

TASK [kubernetes/preinstall : NetworkManager | Check if host has NetworkManager] ***
ok: [node4]
ok: [node6]
ok: [node5]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/preinstall : Update package management cache (APT)] ***********
changed: [node2]
changed: [node1]
changed: [node3]
changed: [node5]
changed: [node4]
changed: [node6]

TASK [kubernetes/preinstall : ensure apt repository is enabled] ****************
ok: [node5] => (item=deb [trusted=yes] http://10.140.79.120:8081/apt-repo ./
)
ok: [node6] => (item=deb [trusted=yes] http://10.140.79.120:8081/apt-repo ./
)
ok: [node4] => (item=deb [trusted=yes] http://10.140.79.120:8081/apt-repo ./
)
ok: [node2] => (item=deb [trusted=yes] http://10.140.79.120:8081/apt-repo ./
)
ok: [node1] => (item=deb [trusted=yes] http://10.140.79.120:8081/apt-repo ./
)
ok: [node3] => (item=deb [trusted=yes] http://10.140.79.120:8081/apt-repo ./
)

TASK [kubernetes/preinstall : Update common_required_pkgs with ipvsadm when kube_proxy_mode is ipvs] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/preinstall : Install packages requirements] *******************
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/preinstall : Stat sysctl file configuration] ******************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/preinstall : Change sysctl file path to link source if linked] ***
ok: [node4]
ok: [node6]
ok: [node5]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/preinstall : Make sure sysctl file path folder exists] ********
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/preinstall : Enable ip forwarding] ****************************
ok: [node4]
ok: [node2]
ok: [node6]
ok: [node1]
ok: [node5]
ok: [node3]

TASK [kubernetes/preinstall : Check if we need to set fs.may_detach_mounts] ****
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/preinstall : Ensure kube-bench parameters are set] ************
ok: [node4] => (item={'name': 'vm.overcommit_memory', 'value': 1})
ok: [node6] => (item={'name': 'vm.overcommit_memory', 'value': 1})
ok: [node5] => (item={'name': 'vm.overcommit_memory', 'value': 1})
ok: [node1] => (item={'name': 'vm.overcommit_memory', 'value': 1})
ok: [node2] => (item={'name': 'vm.overcommit_memory', 'value': 1})
ok: [node4] => (item={'name': 'kernel.panic', 'value': 10})
ok: [node6] => (item={'name': 'kernel.panic', 'value': 10})
ok: [node5] => (item={'name': 'kernel.panic', 'value': 10})
ok: [node1] => (item={'name': 'kernel.panic', 'value': 10})
ok: [node2] => (item={'name': 'kernel.panic', 'value': 10})
ok: [node4] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
ok: [node6] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
ok: [node5] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
ok: [node2] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
ok: [node1] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
ok: [node3] => (item={'name': 'vm.overcommit_memory', 'value': 1})
ok: [node3] => (item={'name': 'kernel.panic', 'value': 10})
ok: [node3] => (item={'name': 'kernel.panic_on_oops', 'value': 1})

TASK [kubernetes/preinstall : Check dummy module] ******************************
ok: [node5]
ok: [node4]
ok: [node2]
ok: [node6]
ok: [node1]
ok: [node3]

TASK [kubernetes/preinstall : Hosts | create list from inventory] **************
ok: [node4 -> localhost]

TASK [kubernetes/preinstall : Hosts | populate inventory into hosts file] ******
ok: [node2]
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node1]
ok: [node3]

TASK [kubernetes/preinstall : Hosts | populate kubernetes loadbalancer address into hosts file] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/preinstall : Hosts | Retrieve hosts file content] *************
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/preinstall : Hosts | Extract existing entries for localhost from hosts file] ***
ok: [node4] => (item=127.0.0.1 localhost)
ok: [node5] => (item=127.0.0.1 localhost)
ok: [node6] => (item=127.0.0.1 localhost)
ok: [node4] => (item=::1 ip6-localhost ip6-loopback localhost6 localhost6.localdomain)
ok: [node1] => (item=127.0.0.1 localhost)
ok: [node2] => (item=127.0.0.1 localhost)
ok: [node6] => (item=::1 ip6-localhost ip6-loopback localhost6 localhost6.localdomain)
ok: [node5] => (item=::1 ip6-localhost ip6-loopback localhost6 localhost6.localdomain)
ok: [node4] => (item=127.0.0.1 k8s.gcr.io localhost localhost.localdomain)
ok: [node1] => (item=::1 ip6-localhost ip6-loopback localhost6 localhost6.localdomain)
ok: [node6] => (item=127.0.0.1 k8s.gcr.io localhost localhost.localdomain)
ok: [node5] => (item=127.0.0.1 k8s.gcr.io localhost localhost.localdomain)
ok: [node2] => (item=::1 ip6-localhost ip6-loopback localhost6 localhost6.localdomain)
ok: [node1] => (item=127.0.0.1 k8s.gcr.io localhost localhost.localdomain)
ok: [node2] => (item=127.0.0.1 k8s.gcr.io localhost localhost.localdomain)
ok: [node3] => (item=127.0.0.1 localhost)
ok: [node3] => (item=::1 ip6-localhost ip6-loopback localhost6 localhost6.localdomain)
ok: [node3] => (item=127.0.0.1 k8s.gcr.io localhost localhost.localdomain)

TASK [kubernetes/preinstall : Hosts | Update target hosts file entries dict with required entries] ***
ok: [node4] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}})
ok: [node4] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}})
ok: [node6] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}})
ok: [node5] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}})
ok: [node6] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}})
ok: [node5] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}})
ok: [node1] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}})
ok: [node2] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}})
ok: [node3] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}})
ok: [node2] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}})
ok: [node1] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}})
ok: [node3] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}})

TASK [kubernetes/preinstall : Hosts | Update (if necessary) hosts file] ********
ok: [node4] => (item={'key': '127.0.0.1', 'value': ['k8s.gcr.io', 'localhost', 'localhost.localdomain']})
ok: [node5] => (item={'key': '127.0.0.1', 'value': ['k8s.gcr.io', 'localhost', 'localhost.localdomain']})
ok: [node6] => (item={'key': '127.0.0.1', 'value': ['k8s.gcr.io', 'localhost', 'localhost.localdomain']})
ok: [node1] => (item={'key': '127.0.0.1', 'value': ['k8s.gcr.io', 'localhost', 'localhost.localdomain']})
ok: [node2] => (item={'key': '127.0.0.1', 'value': ['k8s.gcr.io', 'localhost', 'localhost.localdomain']})
ok: [node5] => (item={'key': '::1', 'value': ['ip6-localhost', 'ip6-loopback', 'localhost6', 'localhost6.localdomain']})
ok: [node4] => (item={'key': '::1', 'value': ['ip6-localhost', 'ip6-loopback', 'localhost6', 'localhost6.localdomain']})
ok: [node6] => (item={'key': '::1', 'value': ['ip6-localhost', 'ip6-loopback', 'localhost6', 'localhost6.localdomain']})
ok: [node2] => (item={'key': '::1', 'value': ['ip6-localhost', 'ip6-loopback', 'localhost6', 'localhost6.localdomain']})
ok: [node1] => (item={'key': '::1', 'value': ['ip6-localhost', 'ip6-loopback', 'localhost6', 'localhost6.localdomain']})
ok: [node3] => (item={'key': '127.0.0.1', 'value': ['k8s.gcr.io', 'localhost', 'localhost.localdomain']})
ok: [node3] => (item={'key': '::1', 'value': ['ip6-localhost', 'ip6-loopback', 'localhost6', 'localhost6.localdomain']})

TASK [kubernetes/preinstall : Update facts] ************************************
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/preinstall : Configure dhclient to supersede search/domain/nameservers] ***
changed: [node4]
changed: [node5]
changed: [node6]
changed: [node1]
changed: [node2]
changed: [node3]

TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (non-RH)] ***
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

RUNNING HANDLER [kubernetes/preinstall : Preinstall | propagate resolvconf to k8s components] ***
changed: [node5]
changed: [node4]
changed: [node6]
changed: [node1]
changed: [node2]
changed: [node3]

RUNNING HANDLER [kubernetes/preinstall : Preinstall | reload kubelet] **********
changed: [node2]
changed: [node4]
changed: [node5]
changed: [node6]
changed: [node1]
changed: [node3]

RUNNING HANDLER [kubernetes/preinstall : Preinstall | kube-apiserver configured] ***
ok: [node3]
ok: [node2]
ok: [node1]

RUNNING HANDLER [kubernetes/preinstall : Preinstall | kube-controller configured] ***
ok: [node1]
ok: [node2]
ok: [node3]

RUNNING HANDLER [kubernetes/preinstall : Preinstall | restart kube-apiserver docker] ***
changed: [node2]
changed: [node3]
changed: [node1]

TASK [kubernetes/preinstall : Check if we are running inside a Azure VM] *******
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/preinstall : install keepalived] ******************************
ok: [node2]
ok: [node3]
ok: [node1]

TASK [kubernetes/preinstall : configure keepalived] ****************************
ok: [node1]

TASK [kubernetes/preinstall : configure keepalived] ****************************
ok: [node2]

TASK [kubernetes/preinstall : configure keepalived] ****************************
ok: [node3]

TASK [kubernetes/preinstall : install haproxy] *********************************
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/preinstall : copy haproxy configuration] **********************
changed: [node2]
changed: [node3]
changed: [node1]

TASK [container-engine/containerd-common : containerd-common | check if fedora coreos] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [container-engine/containerd-common : containerd-common | set is_ostree] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [container-engine/containerd-common : containerd-common | gather os specific variables] ***
ok: [node4] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml)
ok: [node5] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml)
ok: [node6] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml)
ok: [node2] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml)
ok: [node1] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml)
ok: [node3] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml)

TASK [container-engine/docker : check if fedora coreos] ************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [container-engine/docker : set is_ostree] *********************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [container-engine/docker : gather os specific variables] ******************
ok: [node4] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml)
ok: [node6] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml)
ok: [node5] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml)
ok: [node1] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml)
ok: [node2] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml)
ok: [node3] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml)

TASK [container-engine/docker : Ensure old versions of Docker are not installed. | Debian] ***
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [container-engine/docker : ensure docker-ce repository public key is installed] ***
ok: [node5] => (item=9DC858229FC7DD38854AE2D88D81803C0EBFCD88)
ok: [node6] => (item=9DC858229FC7DD38854AE2D88D81803C0EBFCD88)
ok: [node4] => (item=9DC858229FC7DD38854AE2D88D81803C0EBFCD88)
ok: [node2] => (item=9DC858229FC7DD38854AE2D88D81803C0EBFCD88)
ok: [node1] => (item=9DC858229FC7DD38854AE2D88D81803C0EBFCD88)
ok: [node3] => (item=9DC858229FC7DD38854AE2D88D81803C0EBFCD88)

TASK [container-engine/docker : ensure docker-ce repository is enabled] ********
ok: [node4] => (item=deb [trusted=yes] http://10.140.79.120:8081/apt-repo ./
)
ok: [node5] => (item=deb [trusted=yes] http://10.140.79.120:8081/apt-repo ./
)
ok: [node6] => (item=deb [trusted=yes] http://10.140.79.120:8081/apt-repo ./
)
ok: [node2] => (item=deb [trusted=yes] http://10.140.79.120:8081/apt-repo ./
)
ok: [node1] => (item=deb [trusted=yes] http://10.140.79.120:8081/apt-repo ./
)
ok: [node3] => (item=deb [trusted=yes] http://10.140.79.120:8081/apt-repo ./
)

TASK [container-engine/docker : Remove dpkg hold] ******************************
ok: [node5] => (item=containerd.io)
ok: [node6] => (item=containerd.io)
ok: [node4] => (item=containerd.io)
ok: [node2] => (item=containerd.io)
ok: [node1] => (item=containerd.io)
ok: [node5] => (item=docker-ce)
ok: [node1] => (item=docker-ce)
ok: [node6] => (item=docker-ce)
ok: [node4] => (item=docker-ce)
ok: [node2] => (item=docker-ce)
ok: [node5] => (item=docker-ce-cli)
ok: [node6] => (item=docker-ce-cli)
ok: [node2] => (item=docker-ce-cli)
ok: [node3] => (item=containerd.io)
ok: [node1] => (item=docker-ce-cli)
ok: [node4] => (item=docker-ce-cli)
ok: [node3] => (item=docker-ce)
ok: [node3] => (item=docker-ce-cli)

TASK [container-engine/docker : ensure docker packages are installed] **********
ok: [node1]
ok: [node2]
ok: [node3]
ok: [node4]
ok: [node6]
ok: [node5]

TASK [container-engine/docker : Creating a daemon json] ************************
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [container-engine/docker : Tell Debian hosts not to change the docker version with apt upgrade] ***
ok: [node4] => (item=containerd.io)
ok: [node5] => (item=containerd.io)
ok: [node6] => (item=containerd.io)
ok: [node2] => (item=containerd.io)
ok: [node1] => (item=containerd.io)
ok: [node4] => (item=docker-ce)
ok: [node6] => (item=docker-ce)
ok: [node5] => (item=docker-ce)
ok: [node2] => (item=docker-ce)
ok: [node1] => (item=docker-ce)
ok: [node4] => (item=docker-ce-cli)
ok: [node5] => (item=docker-ce-cli)
ok: [node2] => (item=docker-ce-cli)
ok: [node1] => (item=docker-ce-cli)
ok: [node6] => (item=docker-ce-cli)
ok: [node3] => (item=containerd.io)
ok: [node3] => (item=docker-ce)
ok: [node3] => (item=docker-ce-cli)

TASK [container-engine/docker : ensure service is started if docker packages are already present] ***
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [container-engine/docker : Create docker service systemd directory if it doesn't exist] ***
ok: [node4]
ok: [node5]
ok: [node1]
ok: [node6]
ok: [node2]
ok: [node3]

TASK [container-engine/docker : get systemd version] ***************************
ok: [node5]
ok: [node4]
ok: [node2]
ok: [node6]
ok: [node1]
ok: [node3]

TASK [container-engine/docker : Write docker.service systemd file] *************
ok: [node4]
ok: [node6]
ok: [node5]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [container-engine/docker : Write docker options systemd drop-in] **********
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [container-engine/docker : ensure docker service is started and enabled] ***
ok: [node5] => (item=docker)
ok: [node4] => (item=docker)
ok: [node6] => (item=docker)
ok: [node2] => (item=docker)
ok: [node1] => (item=docker)
ok: [node3] => (item=docker)

TASK [container-engine/docker : Log into private registry] *********************
changed: [node4]
changed: [node5]
changed: [node6]
changed: [node2]
changed: [node1]
changed: [node3]

TASK [download : prep_download | Set a few facts] ******************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : prep_download | Register docker images info] ******************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : prep_download | Create staging directory on remote node] ******
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/prep_kubeadm_images.yml for node1, node2, node3
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3

TASK [download : download_file | Starting download of file] ********************
ok: [node3] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/v1.22.0/kubeadm"
}
ok: [node2] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/v1.22.0/kubeadm"
}
ok: [node1] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/v1.22.0/kubeadm"
}

TASK [download : download_file | Set pathname of cached file] ******************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : download_file | Create dest directory on node] ****************
ok: [node3]
ok: [node2]
ok: [node1]

TASK [download : download_file | Download item] ********************************
ok: [node2 -> node2]
ok: [node3 -> node3]
ok: [node1 -> node1]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/extract_file.yml for node1, node2, node3

TASK [download : prep_kubeadm_images | Create kubeadm config] ******************
ok: [node2]
ok: [node3]
ok: [node1]

TASK [download : prep_kubeadm_images | Copy kubeadm binary from download dir to system path] ***
ok: [node2]
ok: [node3]
ok: [node1]

TASK [download : prep_kubeadm_images | Set kubeadm binary permissions] *********
ok: [node2]
ok: [node3]
ok: [node1]

TASK [download : prep_kubeadm_images | Generate list of required images] *******
ok: [node1]

TASK [download : prep_kubeadm_images | Parse list of images] *******************
ok: [node1] => (item=10.140.79.120:5000/kube-apiserver:v1.22.0)
ok: [node1] => (item=10.140.79.120:5000/kube-controller-manager:v1.22.0)
ok: [node1] => (item=10.140.79.120:5000/kube-scheduler:v1.22.0)
ok: [node1] => (item=10.140.79.120:5000/kube-proxy:v1.22.0)

TASK [download : prep_kubeadm_images | Convert list of images to dict for later use] ***
ok: [node1]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.0', 'dest': '/tmp/releases/etcd-v3.5.0-linux-amd64.tar.gz', 'repo': '10.140.79.120:5000/coreos/etcd', 'tag': 'v3.5.0', 'sha256': '864baa0437f8368e0713d44b83afe21dce1fb4ee7dae4ca0f9dd5f0df22d01c4', 'url': 'http://10.140.79.120:8081/k8s/kubernetes/etcd/etcd-v3.5.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}})
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_file.yml for node1, node2, node6, node5, node4, node3 => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.0.1', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.0.1.tgz', 'sha256': '5238fbb2767cbf6aae736ad97a7aa29167525dcd405196dfbc064672a730d3cf', 'url': 'http://10.140.79.120:8081/k8s/kubernetes/cni/cni-plugins-linux-amd64-v1.0.1.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_file.yml for node1, node2, node6, node5, node4, node3 => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.22.0', 'dest': '/tmp/releases/kubeadm-v1.22.0-amd64', 'sha256': '90a48b92a57ff6aef63ff409e2feda0713ca926b2cd243fe7e88a84c483456cc', 'url': 'http://10.140.79.120:8081/k8s/kubernetes/v1.22.0/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_file.yml for node1, node2, node6, node5, node4, node3 => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.22.0', 'dest': '/tmp/releases/kubelet-v1.22.0-amd64', 'sha256': 'fec5c596f7f815f17f5d7d955e9707df1ef02a2ca5e788b223651f83376feb7f', 'url': 'http://10.140.79.120:8081/k8s/kubernetes/v1.22.0/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.22.0', 'dest': '/tmp/releases/kubectl-v1.22.0-amd64', 'sha256': '703e70d49b82271535bc66bc7bd469a58c11d47f188889bd37101c9772f14fa1', 'url': 'http://10.140.79.120:8081/k8s/kubernetes/v1.22.0/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}})
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_file.yml for node1, node2, node6, node5, node4, node3 => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.20.3', 'dest': '/tmp/releases/calicoctl', 'sha256': '29bec97b1dfc135b830b0cbfd3dfe216f00e97e9e6ef08e620d81d4a09db6393', 'url': 'http://10.140.79.120:8081/k8s/kubernetes/calico/v3.20.3/calicoctl-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_container.yml for node1, node2, node6, node5, node4, node3 => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': '10.140.79.120:5000/calico/node', 'tag': 'v3.20.3', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_container.yml for node1, node2, node6, node5, node4, node3 => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': '10.140.79.120:5000/calico/cni', 'tag': 'v3.20.3', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_container.yml for node1, node2, node6, node5, node4, node3 => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': '10.140.79.120:5000/calico/pod2daemon-flexvol', 'tag': 'v3.20.3', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_container.yml for node1, node2, node6, node5, node4, node3 => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': '10.140.79.120:5000/calico/kube-controllers', 'tag': 'v3.20.3', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_file.yml for node1, node2, node3 => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.20.3', 'dest': '/tmp/releases/calico-v3.20.3-kdd-crds/v3.20.3.tar.gz', 'sha256': '2a3a5cbe05c60fa2fc850252c4eecfa36dd6629191ed805eea31f9b5c740bc4c', 'url': 'http://10.140.79.120:8081/k8s/kubernetes/calico/v3.20.3.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=6', '--wildcards', '*/_includes/charts/calico/crds/kdd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}})
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_container.yml for node1, node2, node6, node5, node4, node3 => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': '10.140.79.120:5000/pause', 'tag': '3.3', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': '10.140.79.120:5000/coredns/coredns', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_control_plane']}})
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_container.yml for node1, node2, node6, node5, node4, node3 => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': '10.140.79.120:5000/dns/k8s-dns-node-cache', 'tag': '1.21.1', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': '10.140.79.120:5000/cpa/cluster-proportional-autoscaler-amd64', 'tag': '1.8.5', 'sha256': '', 'groups': ['kube_control_plane']}})
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'metrics_server', 'value': {'enabled': True, 'container': True, 'repo': '10.140.79.120:5000/metrics-server/metrics-server', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_control_plane']}})
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'addon_resizer', 'value': {'enabled': True, 'container': True, 'repo': '10.140.79.120:5000/addon-resizer', 'tag': '1.8.11', 'sha256': '', 'groups': ['kube_control_plane']}})
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': '10.140.79.120:5000/kubernetesui/dashboard-amd64', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_control_plane']}})
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_container.yml for node1, node2, node3 => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': '10.140.79.120:5000/kubernetesui/metrics-scraper', 'tag': 'v1.0.7', 'sha256': '', 'groups': ['kube_control_plane']}})
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_container.yml for node1, node2, node6, node5, node4, node3 => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': '10.140.79.120:5000/kube-apiserver', 'tag': 'v1.22.0', 'groups': 'k8s_cluster'}})
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_container.yml for node1, node2, node6, node5, node4, node3 => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': '10.140.79.120:5000/kube-controller-manager', 'tag': 'v1.22.0', 'groups': 'k8s_cluster'}})
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_container.yml for node1, node2, node6, node5, node4, node3 => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': '10.140.79.120:5000/kube-scheduler', 'tag': 'v1.22.0', 'groups': 'k8s_cluster'}})
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_container.yml for node1, node2, node6, node5, node4, node3 => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': '10.140.79.120:5000/kube-proxy', 'tag': 'v1.22.0', 'groups': 'k8s_cluster'}})
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/download_container.yml for node6, node5, node4 => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': True, 'container': True, 'repo': '10.140.79.120:5000/ingress-nginx/controller', 'tag': 'v1.0.4', 'sha256': '', 'groups': ['kube_node']}})

TASK [download : download_file | Starting download of file] ********************
ok: [node1] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/etcd/etcd-v3.5.0-linux-amd64.tar.gz"
}
ok: [node2] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/etcd/etcd-v3.5.0-linux-amd64.tar.gz"
}
ok: [node3] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/etcd/etcd-v3.5.0-linux-amd64.tar.gz"
}

TASK [download : download_file | Set pathname of cached file] ******************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : download_file | Create dest directory on node] ****************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : download_file | Download item] ********************************
ok: [node1 -> node1]
ok: [node2 -> node2]
ok: [node3 -> node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/extract_file.yml for node1, node2, node3

TASK [download : extract_file | Unpacking archive] *****************************
ok: [node2]
ok: [node3]
ok: [node1]

TASK [download : download_file | Starting download of file] ********************
ok: [node4] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/cni/cni-plugins-linux-amd64-v1.0.1.tgz"
}
ok: [node5] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/cni/cni-plugins-linux-amd64-v1.0.1.tgz"
}
ok: [node6] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/cni/cni-plugins-linux-amd64-v1.0.1.tgz"
}
ok: [node1] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/cni/cni-plugins-linux-amd64-v1.0.1.tgz"
}
ok: [node2] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/cni/cni-plugins-linux-amd64-v1.0.1.tgz"
}
ok: [node3] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/cni/cni-plugins-linux-amd64-v1.0.1.tgz"
}

TASK [download : download_file | Set pathname of cached file] ******************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : download_file | Create dest directory on node] ****************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : download_file | Download item] ********************************
ok: [node5 -> node5]
ok: [node4 -> node4]
ok: [node6 -> node6]
ok: [node1 -> node1]
ok: [node2 -> node2]
ok: [node3 -> node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/extract_file.yml for node4, node5, node6, node1, node2, node3

TASK [download : download_file | Starting download of file] ********************
ok: [node4] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/v1.22.0/kubeadm"
}
ok: [node5] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/v1.22.0/kubeadm"
}
ok: [node6] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/v1.22.0/kubeadm"
}
ok: [node1] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/v1.22.0/kubeadm"
}
ok: [node2] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/v1.22.0/kubeadm"
}
ok: [node3] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/v1.22.0/kubeadm"
}

TASK [download : download_file | Set pathname of cached file] ******************
ok: [node4]
ok: [node5]
ok: [node1]
ok: [node6]
ok: [node2]
ok: [node3]

TASK [download : download_file | Create dest directory on node] ****************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : download_file | Download item] ********************************
ok: [node4 -> node4]
ok: [node5 -> node5]
ok: [node6 -> node6]
ok: [node1 -> node1]
ok: [node2 -> node2]
ok: [node3 -> node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/extract_file.yml for node4, node5, node6, node1, node2, node3

TASK [download : download_file | Starting download of file] ********************
ok: [node4] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/v1.22.0/kubelet"
}
ok: [node5] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/v1.22.0/kubelet"
}
ok: [node6] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/v1.22.0/kubelet"
}
ok: [node1] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/v1.22.0/kubelet"
}
ok: [node2] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/v1.22.0/kubelet"
}
ok: [node3] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/v1.22.0/kubelet"
}

TASK [download : download_file | Set pathname of cached file] ******************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : download_file | Create dest directory on node] ****************
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : download_file | Download item] ********************************
ok: [node4 -> node4]
ok: [node5 -> node5]
ok: [node6 -> node6]
ok: [node2 -> node2]
ok: [node1 -> node1]
ok: [node3 -> node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/extract_file.yml for node4, node5, node6, node1, node2, node3

TASK [download : download_file | Starting download of file] ********************
ok: [node1] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/v1.22.0/kubectl"
}
ok: [node2] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/v1.22.0/kubectl"
}
ok: [node3] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/v1.22.0/kubectl"
}

TASK [download : download_file | Set pathname of cached file] ******************
ok: [node1]
ok: [node3]
ok: [node2]

TASK [download : download_file | Create dest directory on node] ****************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : download_file | Download item] ********************************
ok: [node3 -> node3]
ok: [node2 -> node2]
ok: [node1 -> node1]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/extract_file.yml for node1, node2, node3

TASK [download : download_file | Starting download of file] ********************
ok: [node4] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/calico/v3.20.3/calicoctl-linux-amd64"
}
ok: [node5] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/calico/v3.20.3/calicoctl-linux-amd64"
}
ok: [node6] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/calico/v3.20.3/calicoctl-linux-amd64"
}
ok: [node1] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/calico/v3.20.3/calicoctl-linux-amd64"
}
ok: [node2] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/calico/v3.20.3/calicoctl-linux-amd64"
}
ok: [node3] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/calico/v3.20.3/calicoctl-linux-amd64"
}

TASK [download : download_file | Set pathname of cached file] ******************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : download_file | Create dest directory on node] ****************
ok: [node5]
ok: [node4]
ok: [node1]
ok: [node6]
ok: [node2]
ok: [node3]

TASK [download : download_file | Download item] ********************************
ok: [node5 -> node5]
ok: [node4 -> node4]
ok: [node6 -> node6]
ok: [node2 -> node2]
ok: [node1 -> node1]
ok: [node3 -> node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/extract_file.yml for node4, node5, node6, node1, node2, node3

TASK [download : set default values for flag variables] ************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [node4] => {
    "msg": "10.140.79.120:5000/calico/node"
}
ok: [node5] => {
    "msg": "10.140.79.120:5000/calico/node"
}
ok: [node6] => {
    "msg": "10.140.79.120:5000/calico/node"
}
ok: [node1] => {
    "msg": "10.140.79.120:5000/calico/node"
}
ok: [node2] => {
    "msg": "10.140.79.120:5000/calico/node"
}
ok: [node3] => {
    "msg": "10.140.79.120:5000/calico/node"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define file name of image] **************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define path of image] *******************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker] ***********************
ok: [node4]
ok: [node6]
ok: [node5]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [download : Set image save/load command for docker on localhost] **********
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/check_pull_required.yml for node4, node5, node6, node1, node2, node3

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : debug] ********************************************************
ok: [node4] => {
    "msg": "Pull 10.140.79.120:5000/calico/node:v3.20.3 required is: True"
}
ok: [node5] => {
    "msg": "Pull 10.140.79.120:5000/calico/node:v3.20.3 required is: True"
}
ok: [node6] => {
    "msg": "Pull 10.140.79.120:5000/calico/node:v3.20.3 required is: True"
}
ok: [node1] => {
    "msg": "Pull 10.140.79.120:5000/calico/node:v3.20.3 required is: True"
}
ok: [node2] => {
    "msg": "Pull 10.140.79.120:5000/calico/node:v3.20.3 required is: True"
}
ok: [node3] => {
    "msg": "Pull 10.140.79.120:5000/calico/node:v3.20.3 required is: True"
}

TASK [download : download_container | Download image if required] **************
changed: [node5 -> node5]
changed: [node4 -> node4]
changed: [node6 -> node6]
changed: [node1 -> node1]
changed: [node2 -> node2]
changed: [node3 -> node3]

TASK [download : download_container | Remove container image from cache] *******
ok: [node4]
ok: [node6]
ok: [node5]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set default values for flag variables] ************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [node4] => {
    "msg": "10.140.79.120:5000/calico/cni"
}
ok: [node6] => {
    "msg": "10.140.79.120:5000/calico/cni"
}
ok: [node5] => {
    "msg": "10.140.79.120:5000/calico/cni"
}
ok: [node1] => {
    "msg": "10.140.79.120:5000/calico/cni"
}
ok: [node2] => {
    "msg": "10.140.79.120:5000/calico/cni"
}
ok: [node3] => {
    "msg": "10.140.79.120:5000/calico/cni"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [node4]
ok: [node6]
ok: [node5]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define file name of image] **************
ok: [node4]
ok: [node6]
ok: [node5]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define path of image] *******************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker] ***********************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker on localhost] **********
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/check_pull_required.yml for node4, node5, node6, node1, node2, node3

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : debug] ********************************************************
ok: [node4] => {
    "msg": "Pull 10.140.79.120:5000/calico/cni:v3.20.3 required is: True"
}
ok: [node5] => {
    "msg": "Pull 10.140.79.120:5000/calico/cni:v3.20.3 required is: True"
}
ok: [node6] => {
    "msg": "Pull 10.140.79.120:5000/calico/cni:v3.20.3 required is: True"
}
ok: [node1] => {
    "msg": "Pull 10.140.79.120:5000/calico/cni:v3.20.3 required is: True"
}
ok: [node2] => {
    "msg": "Pull 10.140.79.120:5000/calico/cni:v3.20.3 required is: True"
}
ok: [node3] => {
    "msg": "Pull 10.140.79.120:5000/calico/cni:v3.20.3 required is: True"
}

TASK [download : download_container | Download image if required] **************
changed: [node4 -> node4]
changed: [node5 -> node5]
changed: [node6 -> node6]
changed: [node1 -> node1]
changed: [node2 -> node2]
changed: [node3 -> node3]

TASK [download : download_container | Remove container image from cache] *******
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set default values for flag variables] ************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [node4] => {
    "msg": "10.140.79.120:5000/calico/pod2daemon-flexvol"
}
ok: [node5] => {
    "msg": "10.140.79.120:5000/calico/pod2daemon-flexvol"
}
ok: [node6] => {
    "msg": "10.140.79.120:5000/calico/pod2daemon-flexvol"
}
ok: [node1] => {
    "msg": "10.140.79.120:5000/calico/pod2daemon-flexvol"
}
ok: [node3] => {
    "msg": "10.140.79.120:5000/calico/pod2daemon-flexvol"
}
ok: [node2] => {
    "msg": "10.140.79.120:5000/calico/pod2daemon-flexvol"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define file name of image] **************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define path of image] *******************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker] ***********************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker on localhost] **********
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/check_pull_required.yml for node4, node5, node6, node1, node2, node3

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node4]
ok: [node6]
ok: [node5]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : debug] ********************************************************
ok: [node4] => {
    "msg": "Pull 10.140.79.120:5000/calico/pod2daemon-flexvol:v3.20.3 required is: True"
}
ok: [node6] => {
    "msg": "Pull 10.140.79.120:5000/calico/pod2daemon-flexvol:v3.20.3 required is: True"
}
ok: [node5] => {
    "msg": "Pull 10.140.79.120:5000/calico/pod2daemon-flexvol:v3.20.3 required is: True"
}
ok: [node1] => {
    "msg": "Pull 10.140.79.120:5000/calico/pod2daemon-flexvol:v3.20.3 required is: True"
}
ok: [node2] => {
    "msg": "Pull 10.140.79.120:5000/calico/pod2daemon-flexvol:v3.20.3 required is: True"
}
ok: [node3] => {
    "msg": "Pull 10.140.79.120:5000/calico/pod2daemon-flexvol:v3.20.3 required is: True"
}

TASK [download : download_container | Download image if required] **************
changed: [node4 -> node4]
changed: [node5 -> node5]
changed: [node6 -> node6]
changed: [node1 -> node1]
changed: [node2 -> node2]
changed: [node3 -> node3]

TASK [download : download_container | Remove container image from cache] *******
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [download : set default values for flag variables] ************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [node4] => {
    "msg": "10.140.79.120:5000/calico/kube-controllers"
}
ok: [node5] => {
    "msg": "10.140.79.120:5000/calico/kube-controllers"
}
ok: [node6] => {
    "msg": "10.140.79.120:5000/calico/kube-controllers"
}
ok: [node1] => {
    "msg": "10.140.79.120:5000/calico/kube-controllers"
}
ok: [node2] => {
    "msg": "10.140.79.120:5000/calico/kube-controllers"
}
ok: [node3] => {
    "msg": "10.140.79.120:5000/calico/kube-controllers"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define file name of image] **************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define path of image] *******************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker] ***********************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker on localhost] **********
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/check_pull_required.yml for node4, node5, node6, node1, node2, node3

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node4]
ok: [node5]
ok: [node1]
ok: [node6]
ok: [node2]
ok: [node3]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node4]
ok: [node6]
ok: [node5]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : debug] ********************************************************
ok: [node4] => {
    "msg": "Pull 10.140.79.120:5000/calico/kube-controllers:v3.20.3 required is: True"
}
ok: [node5] => {
    "msg": "Pull 10.140.79.120:5000/calico/kube-controllers:v3.20.3 required is: True"
}
ok: [node6] => {
    "msg": "Pull 10.140.79.120:5000/calico/kube-controllers:v3.20.3 required is: True"
}
ok: [node1] => {
    "msg": "Pull 10.140.79.120:5000/calico/kube-controllers:v3.20.3 required is: True"
}
ok: [node2] => {
    "msg": "Pull 10.140.79.120:5000/calico/kube-controllers:v3.20.3 required is: True"
}
ok: [node3] => {
    "msg": "Pull 10.140.79.120:5000/calico/kube-controllers:v3.20.3 required is: True"
}

TASK [download : download_container | Download image if required] **************
changed: [node4 -> node4]
changed: [node5 -> node5]
changed: [node6 -> node6]
changed: [node1 -> node1]
changed: [node2 -> node2]
changed: [node3 -> node3]

TASK [download : download_container | Remove container image from cache] *******
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : download_file | Starting download of file] ********************
ok: [node1] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/calico/v3.20.3.tar.gz"
}
ok: [node2] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/calico/v3.20.3.tar.gz"
}
ok: [node3] => {
    "msg": "http://10.140.79.120:8081/k8s/kubernetes/calico/v3.20.3.tar.gz"
}

TASK [download : download_file | Set pathname of cached file] ******************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : download_file | Create dest directory on node] ****************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : download_file | Download item] ********************************
ok: [node1 -> node1]
ok: [node2 -> node2]
ok: [node3 -> node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/extract_file.yml for node1, node2, node3

TASK [download : extract_file | Unpacking archive] *****************************
ok: [node2]
ok: [node3]
ok: [node1]

TASK [download : set default values for flag variables] ************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [node4] => {
    "msg": "10.140.79.120:5000/pause"
}
ok: [node5] => {
    "msg": "10.140.79.120:5000/pause"
}
ok: [node6] => {
    "msg": "10.140.79.120:5000/pause"
}
ok: [node1] => {
    "msg": "10.140.79.120:5000/pause"
}
ok: [node2] => {
    "msg": "10.140.79.120:5000/pause"
}
ok: [node3] => {
    "msg": "10.140.79.120:5000/pause"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define file name of image] **************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define path of image] *******************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker] ***********************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker on localhost] **********
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/check_pull_required.yml for node4, node5, node6, node1, node2, node3

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node4]
ok: [node6]
ok: [node5]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : debug] ********************************************************
ok: [node4] => {
    "msg": "Pull 10.140.79.120:5000/pause:3.3 required is: True"
}
ok: [node5] => {
    "msg": "Pull 10.140.79.120:5000/pause:3.3 required is: True"
}
ok: [node6] => {
    "msg": "Pull 10.140.79.120:5000/pause:3.3 required is: True"
}
ok: [node1] => {
    "msg": "Pull 10.140.79.120:5000/pause:3.3 required is: True"
}
ok: [node2] => {
    "msg": "Pull 10.140.79.120:5000/pause:3.3 required is: True"
}
ok: [node3] => {
    "msg": "Pull 10.140.79.120:5000/pause:3.3 required is: True"
}

TASK [download : download_container | Download image if required] **************
changed: [node4 -> node4]
changed: [node5 -> node5]
changed: [node2 -> node2]
changed: [node6 -> node6]
changed: [node1 -> node1]
changed: [node3 -> node3]

TASK [download : download_container | Remove container image from cache] *******
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [download : set default values for flag variables] ************************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [node1] => {
    "msg": "10.140.79.120:5000/coredns/coredns"
}
ok: [node2] => {
    "msg": "10.140.79.120:5000/coredns/coredns"
}
ok: [node3] => {
    "msg": "10.140.79.120:5000/coredns/coredns"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define file name of image] **************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define path of image] *******************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker] ***********************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker on localhost] **********
ok: [node1]
ok: [node2]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/check_pull_required.yml for node1, node2, node3

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : debug] ********************************************************
ok: [node1] => {
    "msg": "Pull 10.140.79.120:5000/coredns/coredns:v1.8.0 required is: True"
}
ok: [node2] => {
    "msg": "Pull 10.140.79.120:5000/coredns/coredns:v1.8.0 required is: True"
}
ok: [node3] => {
    "msg": "Pull 10.140.79.120:5000/coredns/coredns:v1.8.0 required is: True"
}

TASK [download : download_container | Download image if required] **************
changed: [node1 -> node1]
changed: [node2 -> node2]
changed: [node3 -> node3]

TASK [download : download_container | Remove container image from cache] *******
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set default values for flag variables] ************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [node4] => {
    "msg": "10.140.79.120:5000/dns/k8s-dns-node-cache"
}
ok: [node5] => {
    "msg": "10.140.79.120:5000/dns/k8s-dns-node-cache"
}
ok: [node6] => {
    "msg": "10.140.79.120:5000/dns/k8s-dns-node-cache"
}
ok: [node1] => {
    "msg": "10.140.79.120:5000/dns/k8s-dns-node-cache"
}
ok: [node2] => {
    "msg": "10.140.79.120:5000/dns/k8s-dns-node-cache"
}
ok: [node3] => {
    "msg": "10.140.79.120:5000/dns/k8s-dns-node-cache"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define file name of image] **************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define path of image] *******************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker] ***********************
ok: [node4]
ok: [node6]
ok: [node5]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker on localhost] **********
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/check_pull_required.yml for node4, node5, node6, node1, node2, node3

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : debug] ********************************************************
ok: [node4] => {
    "msg": "Pull 10.140.79.120:5000/dns/k8s-dns-node-cache:1.21.1 required is: True"
}
ok: [node5] => {
    "msg": "Pull 10.140.79.120:5000/dns/k8s-dns-node-cache:1.21.1 required is: True"
}
ok: [node6] => {
    "msg": "Pull 10.140.79.120:5000/dns/k8s-dns-node-cache:1.21.1 required is: True"
}
ok: [node1] => {
    "msg": "Pull 10.140.79.120:5000/dns/k8s-dns-node-cache:1.21.1 required is: True"
}
ok: [node2] => {
    "msg": "Pull 10.140.79.120:5000/dns/k8s-dns-node-cache:1.21.1 required is: True"
}
ok: [node3] => {
    "msg": "Pull 10.140.79.120:5000/dns/k8s-dns-node-cache:1.21.1 required is: True"
}

TASK [download : download_container | Download image if required] **************
changed: [node4 -> node4]
changed: [node5 -> node5]
changed: [node6 -> node6]
changed: [node1 -> node1]
changed: [node2 -> node2]
changed: [node3 -> node3]

TASK [download : download_container | Remove container image from cache] *******
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set default values for flag variables] ************************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [node1] => {
    "msg": "10.140.79.120:5000/cpa/cluster-proportional-autoscaler-amd64"
}
ok: [node2] => {
    "msg": "10.140.79.120:5000/cpa/cluster-proportional-autoscaler-amd64"
}
ok: [node3] => {
    "msg": "10.140.79.120:5000/cpa/cluster-proportional-autoscaler-amd64"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define file name of image] **************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define path of image] *******************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker] ***********************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker on localhost] **********
ok: [node1]
ok: [node2]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/check_pull_required.yml for node1, node2, node3

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node2]
ok: [node3]
ok: [node1]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : debug] ********************************************************
ok: [node1] => {
    "msg": "Pull 10.140.79.120:5000/cpa/cluster-proportional-autoscaler-amd64:1.8.5 required is: True"
}
ok: [node2] => {
    "msg": "Pull 10.140.79.120:5000/cpa/cluster-proportional-autoscaler-amd64:1.8.5 required is: True"
}
ok: [node3] => {
    "msg": "Pull 10.140.79.120:5000/cpa/cluster-proportional-autoscaler-amd64:1.8.5 required is: True"
}

TASK [download : download_container | Download image if required] **************
changed: [node1 -> node1]
changed: [node2 -> node2]
changed: [node3 -> node3]

TASK [download : download_container | Remove container image from cache] *******
ok: [node1]
ok: [node3]
ok: [node2]

TASK [download : set default values for flag variables] ************************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [node1] => {
    "msg": "10.140.79.120:5000/metrics-server/metrics-server"
}
ok: [node2] => {
    "msg": "10.140.79.120:5000/metrics-server/metrics-server"
}
ok: [node3] => {
    "msg": "10.140.79.120:5000/metrics-server/metrics-server"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define file name of image] **************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define path of image] *******************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker] ***********************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker on localhost] **********
ok: [node1]
ok: [node2]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/check_pull_required.yml for node1, node2, node3

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node2]
ok: [node3]
ok: [node1]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : debug] ********************************************************
ok: [node1] => {
    "msg": "Pull 10.140.79.120:5000/metrics-server/metrics-server:v0.5.0 required is: True"
}
ok: [node2] => {
    "msg": "Pull 10.140.79.120:5000/metrics-server/metrics-server:v0.5.0 required is: True"
}
ok: [node3] => {
    "msg": "Pull 10.140.79.120:5000/metrics-server/metrics-server:v0.5.0 required is: True"
}

TASK [download : download_container | Download image if required] **************
changed: [node1 -> node1]
changed: [node2 -> node2]
changed: [node3 -> node3]

TASK [download : download_container | Remove container image from cache] *******
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set default values for flag variables] ************************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [node1] => {
    "msg": "10.140.79.120:5000/addon-resizer"
}
ok: [node2] => {
    "msg": "10.140.79.120:5000/addon-resizer"
}
ok: [node3] => {
    "msg": "10.140.79.120:5000/addon-resizer"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define file name of image] **************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define path of image] *******************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker] ***********************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker on localhost] **********
ok: [node1]
ok: [node2]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/check_pull_required.yml for node1, node2, node3

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : debug] ********************************************************
ok: [node1] => {
    "msg": "Pull 10.140.79.120:5000/addon-resizer:1.8.11 required is: True"
}
ok: [node2] => {
    "msg": "Pull 10.140.79.120:5000/addon-resizer:1.8.11 required is: True"
}
ok: [node3] => {
    "msg": "Pull 10.140.79.120:5000/addon-resizer:1.8.11 required is: True"
}

TASK [download : download_container | Download image if required] **************
changed: [node1 -> node1]
changed: [node2 -> node2]
changed: [node3 -> node3]

TASK [download : download_container | Remove container image from cache] *******
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set default values for flag variables] ************************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [node1] => {
    "msg": "10.140.79.120:5000/kubernetesui/dashboard-amd64"
}
ok: [node2] => {
    "msg": "10.140.79.120:5000/kubernetesui/dashboard-amd64"
}
ok: [node3] => {
    "msg": "10.140.79.120:5000/kubernetesui/dashboard-amd64"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define file name of image] **************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define path of image] *******************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker] ***********************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker on localhost] **********
ok: [node1]
ok: [node2]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/check_pull_required.yml for node1, node2, node3

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node2]
ok: [node1]
ok: [node3]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : debug] ********************************************************
ok: [node1] => {
    "msg": "Pull 10.140.79.120:5000/kubernetesui/dashboard-amd64:v2.4.0 required is: True"
}
ok: [node2] => {
    "msg": "Pull 10.140.79.120:5000/kubernetesui/dashboard-amd64:v2.4.0 required is: True"
}
ok: [node3] => {
    "msg": "Pull 10.140.79.120:5000/kubernetesui/dashboard-amd64:v2.4.0 required is: True"
}

TASK [download : download_container | Download image if required] **************
changed: [node1 -> node1]
changed: [node2 -> node2]
changed: [node3 -> node3]

TASK [download : download_container | Remove container image from cache] *******
ok: [node2]
ok: [node3]
ok: [node1]

TASK [download : set default values for flag variables] ************************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [node1] => {
    "msg": "10.140.79.120:5000/kubernetesui/metrics-scraper"
}
ok: [node2] => {
    "msg": "10.140.79.120:5000/kubernetesui/metrics-scraper"
}
ok: [node3] => {
    "msg": "10.140.79.120:5000/kubernetesui/metrics-scraper"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define file name of image] **************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define path of image] *******************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker] ***********************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker on localhost] **********
ok: [node1]
ok: [node2]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/check_pull_required.yml for node1, node2, node3

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node2]
ok: [node1]
ok: [node3]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : debug] ********************************************************
ok: [node1] => {
    "msg": "Pull 10.140.79.120:5000/kubernetesui/metrics-scraper:v1.0.7 required is: True"
}
ok: [node2] => {
    "msg": "Pull 10.140.79.120:5000/kubernetesui/metrics-scraper:v1.0.7 required is: True"
}
ok: [node3] => {
    "msg": "Pull 10.140.79.120:5000/kubernetesui/metrics-scraper:v1.0.7 required is: True"
}

TASK [download : download_container | Download image if required] **************
changed: [node1 -> node1]
changed: [node2 -> node2]
changed: [node3 -> node3]

TASK [download : download_container | Remove container image from cache] *******
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set default values for flag variables] ************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [node4] => {
    "msg": "10.140.79.120:5000/kube-apiserver"
}
ok: [node5] => {
    "msg": "10.140.79.120:5000/kube-apiserver"
}
ok: [node6] => {
    "msg": "10.140.79.120:5000/kube-apiserver"
}
ok: [node1] => {
    "msg": "10.140.79.120:5000/kube-apiserver"
}
ok: [node2] => {
    "msg": "10.140.79.120:5000/kube-apiserver"
}
ok: [node3] => {
    "msg": "10.140.79.120:5000/kube-apiserver"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [node4]
ok: [node6]
ok: [node5]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define file name of image] **************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define path of image] *******************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker] ***********************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker on localhost] **********
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/check_pull_required.yml for node4, node5, node6, node1, node2, node3

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : debug] ********************************************************
ok: [node4] => {
    "msg": "Pull 10.140.79.120:5000/kube-apiserver:v1.22.0 required is: True"
}
ok: [node5] => {
    "msg": "Pull 10.140.79.120:5000/kube-apiserver:v1.22.0 required is: True"
}
ok: [node6] => {
    "msg": "Pull 10.140.79.120:5000/kube-apiserver:v1.22.0 required is: True"
}
ok: [node1] => {
    "msg": "Pull 10.140.79.120:5000/kube-apiserver:v1.22.0 required is: True"
}
ok: [node2] => {
    "msg": "Pull 10.140.79.120:5000/kube-apiserver:v1.22.0 required is: True"
}
ok: [node3] => {
    "msg": "Pull 10.140.79.120:5000/kube-apiserver:v1.22.0 required is: True"
}

TASK [download : download_container | Download image if required] **************
changed: [node4 -> node4]
changed: [node5 -> node5]
changed: [node6 -> node6]
changed: [node2 -> node2]
changed: [node1 -> node1]
changed: [node3 -> node3]

TASK [download : download_container | Remove container image from cache] *******
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set default values for flag variables] ************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [node4] => {
    "msg": "10.140.79.120:5000/kube-controller-manager"
}
ok: [node5] => {
    "msg": "10.140.79.120:5000/kube-controller-manager"
}
ok: [node6] => {
    "msg": "10.140.79.120:5000/kube-controller-manager"
}
ok: [node1] => {
    "msg": "10.140.79.120:5000/kube-controller-manager"
}
ok: [node2] => {
    "msg": "10.140.79.120:5000/kube-controller-manager"
}
ok: [node3] => {
    "msg": "10.140.79.120:5000/kube-controller-manager"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define file name of image] **************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define path of image] *******************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker] ***********************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker on localhost] **********
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/check_pull_required.yml for node4, node5, node6, node1, node2, node3

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : debug] ********************************************************
ok: [node4] => {
    "msg": "Pull 10.140.79.120:5000/kube-controller-manager:v1.22.0 required is: True"
}
ok: [node5] => {
    "msg": "Pull 10.140.79.120:5000/kube-controller-manager:v1.22.0 required is: True"
}
ok: [node6] => {
    "msg": "Pull 10.140.79.120:5000/kube-controller-manager:v1.22.0 required is: True"
}
ok: [node1] => {
    "msg": "Pull 10.140.79.120:5000/kube-controller-manager:v1.22.0 required is: True"
}
ok: [node2] => {
    "msg": "Pull 10.140.79.120:5000/kube-controller-manager:v1.22.0 required is: True"
}
ok: [node3] => {
    "msg": "Pull 10.140.79.120:5000/kube-controller-manager:v1.22.0 required is: True"
}

TASK [download : download_container | Download image if required] **************
changed: [node4 -> node4]
changed: [node5 -> node5]
changed: [node6 -> node6]
changed: [node2 -> node2]
changed: [node1 -> node1]
changed: [node3 -> node3]

TASK [download : download_container | Remove container image from cache] *******
ok: [node4]
ok: [node6]
ok: [node5]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [download : set default values for flag variables] ************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [node4] => {
    "msg": "10.140.79.120:5000/kube-scheduler"
}
ok: [node5] => {
    "msg": "10.140.79.120:5000/kube-scheduler"
}
ok: [node6] => {
    "msg": "10.140.79.120:5000/kube-scheduler"
}
ok: [node1] => {
    "msg": "10.140.79.120:5000/kube-scheduler"
}
ok: [node2] => {
    "msg": "10.140.79.120:5000/kube-scheduler"
}
ok: [node3] => {
    "msg": "10.140.79.120:5000/kube-scheduler"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define file name of image] **************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define path of image] *******************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker] ***********************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker on localhost] **********
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/check_pull_required.yml for node4, node5, node6, node1, node2, node3

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : debug] ********************************************************
ok: [node4] => {
    "msg": "Pull 10.140.79.120:5000/kube-scheduler:v1.22.0 required is: True"
}
ok: [node5] => {
    "msg": "Pull 10.140.79.120:5000/kube-scheduler:v1.22.0 required is: True"
}
ok: [node6] => {
    "msg": "Pull 10.140.79.120:5000/kube-scheduler:v1.22.0 required is: True"
}
ok: [node1] => {
    "msg": "Pull 10.140.79.120:5000/kube-scheduler:v1.22.0 required is: True"
}
ok: [node3] => {
    "msg": "Pull 10.140.79.120:5000/kube-scheduler:v1.22.0 required is: True"
}
ok: [node2] => {
    "msg": "Pull 10.140.79.120:5000/kube-scheduler:v1.22.0 required is: True"
}

TASK [download : download_container | Download image if required] **************
changed: [node4 -> node4]
changed: [node5 -> node5]
changed: [node6 -> node6]
changed: [node2 -> node2]
changed: [node1 -> node1]
changed: [node3 -> node3]

TASK [download : download_container | Remove container image from cache] *******
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set default values for flag variables] ************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [node4] => {
    "msg": "10.140.79.120:5000/kube-proxy"
}
ok: [node5] => {
    "msg": "10.140.79.120:5000/kube-proxy"
}
ok: [node6] => {
    "msg": "10.140.79.120:5000/kube-proxy"
}
ok: [node1] => {
    "msg": "10.140.79.120:5000/kube-proxy"
}
ok: [node2] => {
    "msg": "10.140.79.120:5000/kube-proxy"
}
ok: [node3] => {
    "msg": "10.140.79.120:5000/kube-proxy"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : set_container_facts | Define file name of image] **************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node3]
ok: [node2]

TASK [download : set_container_facts | Define path of image] *******************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker] ***********************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [download : Set image save/load command for docker on localhost] **********
ok: [node4]
ok: [node6]
ok: [node5]
ok: [node1]
ok: [node2]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/check_pull_required.yml for node4, node5, node6, node1, node2, node3

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [download : debug] ********************************************************
ok: [node4] => {
    "msg": "Pull 10.140.79.120:5000/kube-proxy:v1.22.0 required is: True"
}
ok: [node5] => {
    "msg": "Pull 10.140.79.120:5000/kube-proxy:v1.22.0 required is: True"
}
ok: [node6] => {
    "msg": "Pull 10.140.79.120:5000/kube-proxy:v1.22.0 required is: True"
}
ok: [node1] => {
    "msg": "Pull 10.140.79.120:5000/kube-proxy:v1.22.0 required is: True"
}
ok: [node2] => {
    "msg": "Pull 10.140.79.120:5000/kube-proxy:v1.22.0 required is: True"
}
ok: [node3] => {
    "msg": "Pull 10.140.79.120:5000/kube-proxy:v1.22.0 required is: True"
}

TASK [download : download_container | Download image if required] **************
changed: [node4 -> node4]
changed: [node6 -> node6]
changed: [node5 -> node5]
changed: [node1 -> node1]
changed: [node2 -> node2]
changed: [node3 -> node3]

TASK [download : download_container | Remove container image from cache] *******
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [download : set default values for flag variables] ************************
ok: [node4]
ok: [node5]
ok: [node6]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [node4] => {
    "msg": "10.140.79.120:5000/ingress-nginx/controller"
}
ok: [node5] => {
    "msg": "10.140.79.120:5000/ingress-nginx/controller"
}
ok: [node6] => {
    "msg": "10.140.79.120:5000/ingress-nginx/controller"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [node4]
ok: [node5]
ok: [node6]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [node4]
ok: [node5]
ok: [node6]

TASK [download : set_container_facts | Define file name of image] **************
ok: [node4]
ok: [node5]
ok: [node6]

TASK [download : set_container_facts | Define path of image] *******************
ok: [node4]
ok: [node5]
ok: [node6]

TASK [download : Set image save/load command for docker] ***********************
ok: [node4]
ok: [node5]
ok: [node6]

TASK [download : Set image save/load command for docker on localhost] **********
ok: [node4]
ok: [node5]
ok: [node6]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/download/tasks/check_pull_required.yml for node4, node5, node6

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [node4]
ok: [node5]
ok: [node6]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [node4]
ok: [node6]
ok: [node5]

TASK [download : debug] ********************************************************
ok: [node4] => {
    "msg": "Pull 10.140.79.120:5000/ingress-nginx/controller:v1.0.4 required is: True"
}
ok: [node5] => {
    "msg": "Pull 10.140.79.120:5000/ingress-nginx/controller:v1.0.4 required is: True"
}
ok: [node6] => {
    "msg": "Pull 10.140.79.120:5000/ingress-nginx/controller:v1.0.4 required is: True"
}

TASK [download : download_container | Download image if required] **************
changed: [node4 -> node4]
changed: [node5 -> node5]
changed: [node6 -> node6]

TASK [download : download_container | Remove container image from cache] *******
ok: [node4]
ok: [node5]
ok: [node6]

PLAY [etcd] ********************************************************************

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node2] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node3] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [adduser : User | Create User Group] **************************************
ok: [node1]
ok: [node3]
ok: [node2]

TASK [adduser : User | Create User] ********************************************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [adduser : User | Create User Group] **************************************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [adduser : User | Create User] ********************************************
ok: [node1]
ok: [node3]
ok: [node2]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/etcd/tasks/check_certs.yml for node1, node2, node3

TASK [etcd : Check_certs | Register certs that have already been generated on first etcd node] ***
ok: [node1 -> node1]

TASK [etcd : Check_certs | Set default value for 'sync_certs', 'gen_certs' and 'etcd_secret_changed' to false] ***
ok: [node1]
ok: [node2]
ok: [node3]

TASK [etcd : Check certs | Register ca and etcd admin/member certs on etcd hosts] ***
ok: [node2] => (item=ca.pem)
ok: [node1] => (item=ca.pem)
ok: [node3] => (item=ca.pem)
ok: [node2] => (item=member-node2.pem)
ok: [node1] => (item=member-node1.pem)
ok: [node3] => (item=member-node3.pem)
ok: [node2] => (item=member-node2-key.pem)
ok: [node3] => (item=member-node3-key.pem)
ok: [node1] => (item=member-node1-key.pem)
ok: [node2] => (item=admin-node2.pem)
ok: [node3] => (item=admin-node3.pem)
ok: [node1] => (item=admin-node1.pem)
ok: [node2] => (item=admin-node2-key.pem)
ok: [node3] => (item=admin-node3-key.pem)
ok: [node1] => (item=admin-node1-key.pem)

TASK [etcd : Check certs | Register ca and etcd node certs on kubernetes hosts] ***
ok: [node1] => (item=ca.pem)
ok: [node3] => (item=ca.pem)
ok: [node2] => (item=ca.pem)
ok: [node3] => (item=node-node3.pem)
ok: [node2] => (item=node-node2.pem)
ok: [node1] => (item=node-node1.pem)
ok: [node3] => (item=node-node3-key.pem)
ok: [node2] => (item=node-node2-key.pem)
ok: [node1] => (item=node-node1-key.pem)

TASK [etcd : Check_certs | Set 'gen_certs' to true if expected certificates are not on the first etcd node] ***
ok: [node1] => (item=/etc/ssl/etcd/ssl/ca.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/admin-node1.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/admin-node1-key.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/member-node1.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/member-node1-key.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/admin-node2.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/admin-node2-key.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/member-node2.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/member-node2-key.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/admin-node3.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/admin-node3-key.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/member-node3.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/member-node3-key.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/node-node1.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/node-node1-key.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/node-node2.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/node-node2-key.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/node-node3.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/node-node3-key.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/node-node4.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/node-node4-key.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/node-node5.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/node-node5-key.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/node-node6.pem)
ok: [node1] => (item=/etc/ssl/etcd/ssl/node-node6-key.pem)

TASK [etcd : Check_certs | Set 'gen_master_certs' object to track whether member and admin certs exist on first etcd node] ***
ok: [node1]

TASK [etcd : Check_certs | Set 'gen_node_certs' object to track whether node certs exist on first etcd node] ***
ok: [node1]

TASK [etcd : Check_certs | Set 'sync_certs' to true] ***************************
ok: [node1]
ok: [node2]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/etcd/tasks/gen_certs_script.yml for node1, node2, node3

TASK [etcd : Gen_certs | create etcd cert dir] *********************************
ok: [node2]
ok: [node1]
ok: [node3]

TASK [etcd : Gen_certs | create etcd script dir (on node1)] ********************
ok: [node1]

TASK [etcd : Gen_certs | write openssl config] *********************************
ok: [node1 -> node1]

TASK [etcd : Gen_certs | copy certs generation script] *************************
ok: [node1]

TASK [etcd : Gen_certs | run cert generation script] ***************************
changed: [node1 -> node1]

TASK [etcd : Gen_certs | Gather etcd member and admin certs from first etcd node] ***
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/ca.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/ca.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/ca-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/ca-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node1.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node1.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node1-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node1-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/member-node1.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/member-node1.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/member-node1-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/member-node1-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node2.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node2.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node2-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node2-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/member-node2.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/member-node2.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/member-node2-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/member-node2-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node3.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node3.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node3-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node3-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/member-node3.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/member-node3.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/member-node3-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/member-node3-key.pem)

TASK [etcd : Gen_certs | Write etcd member and admin certs to other etcd nodes] ***
changed: [node2] => (item=/etc/ssl/etcd/ssl/ca.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/ca.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/ca-key.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/ca-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/admin-node1.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/admin-node1.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/admin-node1-key.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/admin-node1-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/member-node1.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/member-node1.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/member-node1-key.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/member-node1-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/admin-node2.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/admin-node2.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/admin-node2-key.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/admin-node2-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/member-node2.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/member-node2.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/member-node2-key.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/member-node2-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/admin-node3.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/admin-node3.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/admin-node3-key.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/admin-node3-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/member-node3.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/member-node3.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/member-node3-key.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/member-node3-key.pem)

TASK [etcd : Gen_certs | Gather node certs from first etcd node] ***************
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node4.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node4.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node4-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node4-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node5.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node5.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node5-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node5-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node6.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node6.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node6-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node6-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node1.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node1.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node1-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node1-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node2.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node2.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node2-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node2-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node3.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node3.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node3-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node3-key.pem)

TASK [etcd : Gen_certs | Write node certs to other etcd nodes] *****************
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node4.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node4.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node4-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node4-key.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node5.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node5.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node5-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node5-key.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node6.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node6.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node6-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node6-key.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node1.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node1.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node1-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node1-key.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node2.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node2.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node2-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node2-key.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node3.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node3.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node3-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node3-key.pem)

TASK [etcd : Gen_certs | Set cert names per node] ******************************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [etcd : Gen_certs | check certificate permissions] ************************
changed: [node2]
changed: [node3]
changed: [node1]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/etcd/tasks/upd_ca_trust.yml for node1, node2, node3

TASK [etcd : Gen_certs | target ca-certificate store file] *********************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [etcd : Gen_certs | add CA to trusted CA dir] *****************************
ok: [node1]
ok: [node3]
ok: [node2]

TASK [etcd : Gen_certs | Get etcd certificate serials] *************************
ok: [node1]
ok: [node3]
ok: [node2]

TASK [etcd : Set etcd_client_cert_serial] **************************************
ok: [node1]
ok: [node2]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/etcd/tasks/install_host.yml for node1, node2, node3

TASK [etcd : install | Copy etcd and etcdctl binary from download dir] *********
ok: [node2] => (item=etcd)
ok: [node1] => (item=etcd)
ok: [node3] => (item=etcd)
ok: [node2] => (item=etcdctl)
ok: [node1] => (item=etcdctl)
ok: [node3] => (item=etcdctl)
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/etcd/tasks/configure.yml for node1, node2, node3

TASK [etcd : Configure | Check if etcd cluster is healthy] *********************
ok: [node1]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/etcd/tasks/refresh_config.yml for node1, node2, node3

TASK [etcd : Refresh config | Create etcd config file] *************************
ok: [node2]
ok: [node3]
ok: [node1]

TASK [etcd : Configure | Copy etcd.service systemd file] ***********************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [etcd : Configure | reload systemd] ***************************************
ok: [node2]
ok: [node3]
ok: [node1]

TASK [etcd : Configure | Ensure etcd is running] *******************************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [etcd : Configure | Wait for etcd cluster to be healthy] ******************
ok: [node1]

TASK [etcd : Configure | Check if member is in etcd cluster] *******************
ok: [node1]
ok: [node2]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/etcd/tasks/refresh_config.yml for node1, node2, node3

TASK [etcd : Refresh config | Create etcd config file] *************************
ok: [node2]
ok: [node1]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/etcd/tasks/refresh_config.yml for node1, node2, node3

TASK [etcd : Refresh config | Create etcd config file] *************************
ok: [node1]
ok: [node2]
ok: [node3]

RUNNING HANDLER [etcd : set etcd_secret_changed] *******************************
ok: [node1]

PLAY [k8s_cluster] *************************************************************

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [node4] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node5] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node6] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node2] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node3] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [adduser : User | Create User Group] **************************************
ok: [node4]
ok: [node6]
ok: [node5]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [adduser : User | Create User] ********************************************
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [adduser : User | Create User Group] **************************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [adduser : User | Create User] ********************************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/etcd/tasks/check_certs.yml for node4, node5, node6, node1, node2, node3

TASK [etcd : Check_certs | Register certs that have already been generated on first etcd node] ***
ok: [node4 -> node1]

TASK [etcd : Check_certs | Set default value for 'sync_certs', 'gen_certs' and 'etcd_secret_changed' to false] ***
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [etcd : Check certs | Register ca and etcd admin/member certs on etcd hosts] ***
ok: [node2] => (item=ca.pem)
ok: [node1] => (item=ca.pem)
ok: [node3] => (item=ca.pem)
ok: [node2] => (item=member-node2.pem)
ok: [node1] => (item=member-node1.pem)
ok: [node3] => (item=member-node3.pem)
ok: [node2] => (item=member-node2-key.pem)
ok: [node1] => (item=member-node1-key.pem)
ok: [node3] => (item=member-node3-key.pem)
ok: [node2] => (item=admin-node2.pem)
ok: [node1] => (item=admin-node1.pem)
ok: [node3] => (item=admin-node3.pem)
ok: [node3] => (item=admin-node3-key.pem)
ok: [node2] => (item=admin-node2-key.pem)
ok: [node1] => (item=admin-node1-key.pem)

TASK [etcd : Check certs | Register ca and etcd node certs on kubernetes hosts] ***
ok: [node5] => (item=ca.pem)
ok: [node4] => (item=ca.pem)
ok: [node6] => (item=ca.pem)
ok: [node2] => (item=ca.pem)
ok: [node1] => (item=ca.pem)
ok: [node5] => (item=node-node5.pem)
ok: [node4] => (item=node-node4.pem)
ok: [node6] => (item=node-node6.pem)
ok: [node2] => (item=node-node2.pem)
ok: [node1] => (item=node-node1.pem)
ok: [node5] => (item=node-node5-key.pem)
ok: [node4] => (item=node-node4-key.pem)
ok: [node6] => (item=node-node6-key.pem)
ok: [node2] => (item=node-node2-key.pem)
ok: [node1] => (item=node-node1-key.pem)
ok: [node3] => (item=ca.pem)
ok: [node3] => (item=node-node3.pem)
ok: [node3] => (item=node-node3-key.pem)

TASK [etcd : Check_certs | Set 'gen_certs' to true if expected certificates are not on the first etcd node] ***
ok: [node4] => (item=/etc/ssl/etcd/ssl/ca.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/admin-node1.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/admin-node1-key.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/member-node1.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/member-node1-key.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/admin-node2.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/admin-node2-key.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/member-node2.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/member-node2-key.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/admin-node3.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/admin-node3-key.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/member-node3.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/member-node3-key.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/node-node1.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/node-node1-key.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/node-node2.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/node-node2-key.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/node-node3.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/node-node3-key.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/node-node4.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/node-node4-key.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/node-node5.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/node-node5-key.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/node-node6.pem)
ok: [node4] => (item=/etc/ssl/etcd/ssl/node-node6-key.pem)

TASK [etcd : Check_certs | Set 'gen_master_certs' object to track whether member and admin certs exist on first etcd node] ***
ok: [node4]

TASK [etcd : Check_certs | Set 'gen_node_certs' object to track whether node certs exist on first etcd node] ***
ok: [node4]

TASK [etcd : Check_certs | Set 'kubernetes_host_requires_sync' to true if ca or node cert and key don't exist on kubernetes host or checksum doesn't match] ***
ok: [node4]
ok: [node5]
ok: [node6]

TASK [etcd : Check_certs | Set 'sync_certs' to true] ***************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/etcd/tasks/gen_certs_script.yml for node4, node5, node6, node1, node2, node3

TASK [etcd : Gen_certs | create etcd cert dir] *********************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [etcd : Gen_certs | run cert generation script] ***************************
changed: [node4 -> node1]

TASK [etcd : Gen_certs | Gather etcd member and admin certs from first etcd node] ***
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/ca.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/ca.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/ca-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/ca-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node1.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node1.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node1-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node1-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/member-node1.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/member-node1.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/member-node1-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/member-node1-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node2.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node2.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node2-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node2-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/member-node2.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/member-node2.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/member-node2-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/member-node2-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node3.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node3.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node3-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/admin-node3-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/member-node3.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/member-node3.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/member-node3-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/member-node3-key.pem)

TASK [etcd : Gen_certs | Write etcd member and admin certs to other etcd nodes] ***
changed: [node2] => (item=/etc/ssl/etcd/ssl/ca.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/ca.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/ca-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/ca-key.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/admin-node1.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/admin-node1.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/admin-node1-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/admin-node1-key.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/member-node1.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/member-node1.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/member-node1-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/member-node1-key.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/admin-node2.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/admin-node2.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/admin-node2-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/admin-node2-key.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/member-node2.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/member-node2.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/member-node2-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/member-node2-key.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/admin-node3.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/admin-node3.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/admin-node3-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/admin-node3-key.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/member-node3.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/member-node3.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/member-node3-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/member-node3-key.pem)

TASK [etcd : Gen_certs | Gather node certs from first etcd node] ***************
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node4.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node4.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node4-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node4-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node5.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node5.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node5-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node5-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node6.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node6.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node6-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node6-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node1.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node1.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node1-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node1-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node2.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node2.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node2-key.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node2-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node3.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node3.pem)
ok: [node3 -> node1] => (item=/etc/ssl/etcd/ssl/node-node3-key.pem)
ok: [node2 -> node1] => (item=/etc/ssl/etcd/ssl/node-node3-key.pem)

TASK [etcd : Gen_certs | Write node certs to other etcd nodes] *****************
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node4.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node4.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node4-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node4-key.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node5.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node5.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node5-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node5-key.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node6.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node6.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node6-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node6-key.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node1.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node1.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node1-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node1-key.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node2.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node2.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node2-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node2-key.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node3.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node3.pem)
changed: [node2] => (item=/etc/ssl/etcd/ssl/node-node3-key.pem)
changed: [node3] => (item=/etc/ssl/etcd/ssl/node-node3-key.pem)

TASK [etcd : Gen_certs | Set cert names per node] ******************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [etcd : Check_certs | Set 'sync_certs' to true on nodes] ******************
ok: [node4] => (item=ca.pem)
ok: [node4] => (item=node-node4.pem)
ok: [node4] => (item=node-node4-key.pem)
ok: [node5] => (item=ca.pem)
ok: [node6] => (item=ca.pem)
ok: [node5] => (item=node-node5.pem)
ok: [node6] => (item=node-node6.pem)
ok: [node5] => (item=node-node5-key.pem)
ok: [node6] => (item=node-node6-key.pem)

TASK [etcd : Gen_certs | Gather node certs] ************************************
changed: [node4 -> node1]
changed: [node6 -> node1]
changed: [node5 -> node1]

TASK [etcd : Gen_certs | Copy certs on nodes] **********************************
ok: [node4]
ok: [node5]
ok: [node6]

TASK [etcd : Gen_certs | check certificate permissions] ************************
changed: [node4]
changed: [node5]
changed: [node6]
changed: [node1]
changed: [node2]
changed: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/etcd/tasks/upd_ca_trust.yml for node4, node5, node6, node1, node2, node3

TASK [etcd : Gen_certs | target ca-certificate store file] *********************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [etcd : Gen_certs | add CA to trusted CA dir] *****************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [etcd : Gen_certs | Get etcd certificate serials] *************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [etcd : Set etcd_client_cert_serial] **************************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/etcd/tasks/install_host.yml for node1, node2, node3
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/etcd/tasks/configure.yml for node1, node2, node3
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/etcd/tasks/refresh_config.yml for node1, node2, node3

TASK [etcd : Configure | reload systemd] ***************************************
ok: [node3]
ok: [node2]
ok: [node1]
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/etcd/tasks/refresh_config.yml for node1, node2, node3
included: /home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/etcd/tasks/refresh_config.yml for node1, node2, node3

RUNNING HANDLER [etcd : set etcd_secret_changed] *******************************
ok: [node4]

PLAY [k8s_cluster] *************************************************************

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [node4] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node5] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node6] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node2] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node3] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [kubernetes/node : look up docker cgroup driver] **************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/node : set kubelet_cgroup_driver_detected fact for docker] ****
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/node : set kubelet_cgroup_driver] *****************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/node : os specific vars] **************************************
ok: [node4] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/kubernetes/node/vars/ubuntu-20.yml)
ok: [node5] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/kubernetes/node/vars/ubuntu-20.yml)
ok: [node6] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/kubernetes/node/vars/ubuntu-20.yml)
ok: [node1] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/kubernetes/node/vars/ubuntu-20.yml)
ok: [node2] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/kubernetes/node/vars/ubuntu-20.yml)
ok: [node3] => (item=/home/cimbuild/if-iaac/kubespray-haproxy-keepalived/kubespray/roles/kubernetes/node/vars/ubuntu-20.yml)

TASK [kubernetes/node : Pre-upgrade | check if kubelet container exists] *******
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/node : Ensure /var/lib/cni exists] ****************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/node : install | Copy kubeadm binary from download dir] *******
ok: [node4]
ok: [node5]
ok: [node6]

TASK [kubernetes/node : install | Copy kubelet binary from download dir] *******
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/node : Ensure nodePort range is reserved] *********************
ok: [node4]
ok: [node5]
ok: [node1]
ok: [node6]
ok: [node2]
ok: [node3]

TASK [kubernetes/node : Verify if br_netfilter module exists] ******************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/node : Verify br_netfilter module path exists] ****************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/node : Enable br_netfilter module] ****************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/node : Persist br_netfilter module] ***************************
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/node : Check if bridge-nf-call-iptables key exists] ***********
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/node : Enable bridge-nf-call tables] **************************
ok: [node5] => (item=net.bridge.bridge-nf-call-iptables)
ok: [node4] => (item=net.bridge.bridge-nf-call-iptables)
ok: [node6] => (item=net.bridge.bridge-nf-call-iptables)
ok: [node1] => (item=net.bridge.bridge-nf-call-iptables)
ok: [node2] => (item=net.bridge.bridge-nf-call-iptables)
ok: [node5] => (item=net.bridge.bridge-nf-call-arptables)
ok: [node6] => (item=net.bridge.bridge-nf-call-arptables)
ok: [node4] => (item=net.bridge.bridge-nf-call-arptables)
ok: [node1] => (item=net.bridge.bridge-nf-call-arptables)
ok: [node2] => (item=net.bridge.bridge-nf-call-arptables)
ok: [node5] => (item=net.bridge.bridge-nf-call-ip6tables)
ok: [node6] => (item=net.bridge.bridge-nf-call-ip6tables)
ok: [node4] => (item=net.bridge.bridge-nf-call-ip6tables)
ok: [node2] => (item=net.bridge.bridge-nf-call-ip6tables)
ok: [node1] => (item=net.bridge.bridge-nf-call-ip6tables)
ok: [node3] => (item=net.bridge.bridge-nf-call-iptables)
ok: [node3] => (item=net.bridge.bridge-nf-call-arptables)
ok: [node3] => (item=net.bridge.bridge-nf-call-ip6tables)

TASK [kubernetes/node : Modprobe Kernel Module for IPVS] ***********************
ok: [node4] => (item=ip_vs)
ok: [node5] => (item=ip_vs)
ok: [node6] => (item=ip_vs)
ok: [node1] => (item=ip_vs)
ok: [node2] => (item=ip_vs)
ok: [node4] => (item=ip_vs_rr)
ok: [node5] => (item=ip_vs_rr)
ok: [node6] => (item=ip_vs_rr)
ok: [node2] => (item=ip_vs_rr)
ok: [node1] => (item=ip_vs_rr)
ok: [node5] => (item=ip_vs_wrr)
ok: [node4] => (item=ip_vs_wrr)
ok: [node6] => (item=ip_vs_wrr)
ok: [node2] => (item=ip_vs_wrr)
ok: [node5] => (item=ip_vs_sh)
ok: [node4] => (item=ip_vs_sh)
ok: [node1] => (item=ip_vs_wrr)
ok: [node6] => (item=ip_vs_sh)
ok: [node2] => (item=ip_vs_sh)
ok: [node1] => (item=ip_vs_sh)
ok: [node3] => (item=ip_vs)
ok: [node3] => (item=ip_vs_rr)
ok: [node3] => (item=ip_vs_wrr)
ok: [node3] => (item=ip_vs_sh)

TASK [kubernetes/node : Modprobe nf_conntrack_ipv4] ****************************
fatal: [node4]: FAILED! => {"changed": false, "msg": "modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-122-generic\n", "name": "nf_conntrack_ipv4", "params": "", "rc": 1, "state": "present", "stderr": "modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-122-generic\n", "stderr_lines": ["modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-122-generic"], "stdout": "", "stdout_lines": []}
...ignoring
fatal: [node5]: FAILED! => {"changed": false, "msg": "modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-122-generic\n", "name": "nf_conntrack_ipv4", "params": "", "rc": 1, "state": "present", "stderr": "modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-122-generic\n", "stderr_lines": ["modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-122-generic"], "stdout": "", "stdout_lines": []}
...ignoring
fatal: [node6]: FAILED! => {"changed": false, "msg": "modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-122-generic\n", "name": "nf_conntrack_ipv4", "params": "", "rc": 1, "state": "present", "stderr": "modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-122-generic\n", "stderr_lines": ["modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-122-generic"], "stdout": "", "stdout_lines": []}
...ignoring
fatal: [node1]: FAILED! => {"changed": false, "msg": "modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-121-generic\n", "name": "nf_conntrack_ipv4", "params": "", "rc": 1, "state": "present", "stderr": "modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-121-generic\n", "stderr_lines": ["modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-121-generic"], "stdout": "", "stdout_lines": []}
...ignoring
fatal: [node2]: FAILED! => {"changed": false, "msg": "modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-121-generic\n", "name": "nf_conntrack_ipv4", "params": "", "rc": 1, "state": "present", "stderr": "modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-121-generic\n", "stderr_lines": ["modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-121-generic"], "stdout": "", "stdout_lines": []}
...ignoring
fatal: [node3]: FAILED! => {"changed": false, "msg": "modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-121-generic\n", "name": "nf_conntrack_ipv4", "params": "", "rc": 1, "state": "present", "stderr": "modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-121-generic\n", "stderr_lines": ["modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-121-generic"], "stdout": "", "stdout_lines": []}
...ignoring

TASK [kubernetes/node : Persist ip_vs modules] *********************************
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/node : Set kubelet api version to v1beta1] ********************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/node : Write kubelet environment config file (kubeadm)] *******
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/node : Write kubelet config file] *****************************
ok: [node4]
ok: [node5]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/node : Write kubelet systemd init file] ***********************
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/node : Enable kubelet] ****************************************
ok: [node5]
ok: [node4]
ok: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

PLAY [kube_control_plane] ******************************************************

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node2] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [node3] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [kubernetes/control-plane : Check which kube-control nodes are already members of the cluster] ***
fatal: [node1]: FAILED! => {"changed": false, "cmd": ["/usr/local/bin/kubectl", "get", "nodes", "--selector=node-role.kubernetes.io/control-plane", "-o", "json"], "delta": "0:00:00.103342", "end": "2022-08-10 11:37:10.799621", "msg": "non-zero return code", "rc": 1, "start": "2022-08-10 11:37:10.696279", "stderr": "The connection to the server localhost:8080 was refused - did you specify the right host or port?", "stderr_lines": ["The connection to the server localhost:8080 was refused - did you specify the right host or port?"], "stdout": "", "stdout_lines": []}
...ignoring
fatal: [node2]: FAILED! => {"changed": false, "cmd": ["/usr/local/bin/kubectl", "get", "nodes", "--selector=node-role.kubernetes.io/control-plane", "-o", "json"], "delta": "0:00:00.092627", "end": "2022-08-10 11:37:10.832099", "msg": "non-zero return code", "rc": 1, "start": "2022-08-10 11:37:10.739472", "stderr": "The connection to the server localhost:8080 was refused - did you specify the right host or port?", "stderr_lines": ["The connection to the server localhost:8080 was refused - did you specify the right host or port?"], "stdout": "", "stdout_lines": []}
...ignoring
fatal: [node3]: FAILED! => {"changed": false, "cmd": ["/usr/local/bin/kubectl", "get", "nodes", "--selector=node-role.kubernetes.io/control-plane", "-o", "json"], "delta": "0:00:00.123388", "end": "2022-08-10 11:37:10.896017", "msg": "non-zero return code", "rc": 1, "start": "2022-08-10 11:37:10.772629", "stderr": "The connection to the server localhost:8080 was refused - did you specify the right host or port?", "stderr_lines": ["The connection to the server localhost:8080 was refused - did you specify the right host or port?"], "stdout": "", "stdout_lines": []}
...ignoring

TASK [kubernetes/control-plane : Set fact first_kube_control_plane] ************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/control-plane : Create kube-scheduler config] *****************
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/control-plane : Install | Copy kubectl binary from download dir] ***
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/control-plane : Install kubectl bash completion] **************
changed: [node1]
changed: [node2]
changed: [node3]

TASK [kubernetes/control-plane : Set kubectl bash completion file permissions] ***
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kubernetes/control-plane : kubeadm | Check if kubeadm has already run] ***
ok: [node3]
ok: [node2]
ok: [node1]

TASK [kubernetes/control-plane : Backup old certs and keys] ********************
changed: [node1] => (item=apiserver.crt)
changed: [node1] => (item=apiserver.key)
changed: [node1] => (item=apiserver-kubelet-client.crt)
changed: [node1] => (item=apiserver-kubelet-client.key)
changed: [node1] => (item=front-proxy-client.crt)
changed: [node1] => (item=front-proxy-client.key)

TASK [kubernetes/control-plane : Backup old confs] *****************************
changed: [node1] => (item=admin.conf)
changed: [node1] => (item=controller-manager.conf)
changed: [node1] => (item=kubelet.conf)
changed: [node1] => (item=scheduler.conf)

TASK [kubernetes/control-plane : kubeadm | aggregate all SANs] *****************
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/control-plane : set kubeadm_config_api_fqdn define] ***********
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/control-plane : Set kubeadm api version to v1beta2] ***********
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kubernetes/control-plane : kubeadm | Create kubeadm config] **************
ok: [node2]
ok: [node3]
ok: [node1]

TASK [kubernetes/control-plane : kubeadm | Check if apiserver.crt contains all needed SANs] ***
ok: [node1]
FAILED - RETRYING: Create kubeadm token for joining nodes with 24h expiration (default) (5 retries left).
FAILED - RETRYING: Create kubeadm token for joining nodes with 24h expiration (default) (5 retries left).
FAILED - RETRYING: Create kubeadm token for joining nodes with 24h expiration (default) (5 retries left).
FAILED - RETRYING: Create kubeadm token for joining nodes with 24h expiration (default) (4 retries left).
FAILED - RETRYING: Create kubeadm token for joining nodes with 24h expiration (default) (4 retries left).
FAILED - RETRYING: Create kubeadm token for joining nodes with 24h expiration (default) (4 retries left).
